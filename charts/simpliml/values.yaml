# Default values for ..
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

finetune:
  namespace: finetune
  createNamespace: true

deployment:
  namespace: deployment
  createNamespace: true

secretEnv:
  backendSecretPath: "env/backend.env"
  inferenceSecretPath: "env/inference.env"

backend:
  replicaCount: 1
  namespace: "default"
  image:
    repository: gchr.io/quarkal-ai/simpliml-backend
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    allowPrivilegeEscalation: false
    privileged: false
    readOnlyRootFilesystem: true

  service:
    type: ClusterIP
    port: 3001

  resources:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 250m
      memory: 250Mi

  livenessProbe:
    httpGet:
      path: /api/v1/healthCheck
      port: http
  
  readinessProbe:
    httpGet:
      path: /api/v1/healthCheck
      port: http

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 6
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 75

  # Additional volumes on the output Deployment definition.
  volumes:
    - name: env
      secret:
        secretName: simpliml-backend-secret

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts:
    - mountPath: "/home/node/app/.env"
      name: env
      subPath: .env

  nodeSelector: {}

  tolerations: []

  affinity: {}

inference:
  replicaCount: 1
  namespace: "default"
  image:
    repository: gchr.io/quarkal-ai/simpliml-inference
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    allowPrivilegeEscalation: false
    privileged: false
    readOnlyRootFilesystem: true

  service:
    type: ClusterIP
    port: 5000

  resources:
    limits:
      cpu: 800m
      memory: 1024Mi
    requests:
      cpu: 400m
      memory: 512Mi

  livenessProbe:
    httpGet:
      path: /v1/healthCheck
      port: http
  
  readinessProbe:
    httpGet:
      path: /v1/healthCheck
      port: http

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 6
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 75

  # Additional volumes on the output Deployment definition.
  volumes:
    - name: env
      secret:
        secretName: simpliml-inference-secret

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts:
    - mountPath: "/home/node/app/.env"
      name: env
      subPath: .env

  nodeSelector: {}

  tolerations: []

  affinity: {}

frontend:
  replicaCount: 1
  namespace: "default"
  image:
    repository: gchr.io/quarkal-ai/simpliml-frontend
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    allowPrivilegeEscalation: false
    privileged: false
    readOnlyRootFilesystem: true

  service:
    type: ClusterIP
    port: 3001

  resources:
    limits:
      cpu: 200m
      memory: 300Mi
    requests:
      cpu: 100m
      memory: 150Mi

  livenessProbe:
    httpGet:
      path: /
      port: http
  
  readinessProbe:
    httpGet:
      path: /
      port: http

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 6
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 75

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

serviceAccount:
  # Annotations to add to the service account
  annotations: {}

ingress:
  enabled: false
  namespace: "default"
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local